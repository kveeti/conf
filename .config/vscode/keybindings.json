[
  // moving between splits / groups with ctrl + hjkl
  {
    "command": "workbench.action.focusLeftGroup",
    "when": "!inputFocus || (editorTextFocus && vim.mode != 'Insert')",
    "key": "ctrl+h"
  },
  {
    "command": "workbench.action.focusRightGroup",
    "when": "!inputFocus || (editorTextFocus && vim.mode != 'Insert')",
    "key": "ctrl+l"
  },
  {
    "command": "workbench.action.focusAboveGroup",
    "when": "!inputFocus || (editorTextFocus && vim.mode != 'Insert')",
    "key": "ctrl+k"
  },
  {
    "command": "workbench.action.focusBelowGroup",
    "when": "!inputFocus || (editorTextFocus && vim.mode != 'Insert')",
    "key": "ctrl+j"
  },
  // --
  {
    "key": "alt+j",
    "command": "orkbench.action.decreaseViewWidth"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.increaseViewWidth"
  },

  // ctrl+n & ctrl+p as next & prev in menus
  {
    "command": "runCommands",
    "key": "ctrl+n",
    "when": "!inputFocus",
    "args": {
      "commands": [
        "list.focusDown",
        "quickInput.next",
        "selectNextSuggestion",
        "selectNextCodeAction"
      ]
    }
  },
  {
    "command": "runCommands",
    "key": "ctrl+p",
    "when": "!inputFocus",
    "args": {
      "commands": [
        "list.focusUp",
        "quickInput.previous",
        "selectPrevSuggestion",
        "selectPrevCodeAction"
      ]
    }
  },
  // --

  {
    "key": "shift-k",
    "command": "editor.action.showHover",
    "when": "editorTextFocus && vim.mode != 'Insert'"
  },
  {
    "key": "space r",
    "command": "editor.action.rename",
    "when": "editorTextFocus && vim.mode != 'Insert'"
  },
  {
    "key": "space f",
    "command": "workbench.action.quickOpen",
    "when": "!inputFocus || (editorTextFocus && vim.mode != 'Insert')"
  },
  {
    "key": "space p",
    "command": "workbench.action.showCommands",
    "when": "!inputFocus || (editorTextFocus && vim.mode != 'Insert')"
  },
  {
    "key": "space g",
    "command": "workbench.action.quickTextSearch",
    "when": "!inputFocus || (editorTextFocus && vim.mode != 'Insert')"
  },
  // {
  //   "key": "space e",
  //   "command": "workbench.action.toggleSidebarVisibility",
  //   "when": "sideBarFocus"
  // },
  {
    "key": "space e",
    "command": "workbench.action.focusSideBar",
    "when": "editorTextFocus && vim.mode != 'Insert'"
  },
  {
    "key": "space w",
    "command": "workbench.action.files.save",
    "when": "!inputFocus || (editorTextFocus && vim.mode != 'Insert')"
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.navigateBack",
    "when": "!inputFocus"
  },
  {
    "key": "ctrl+i",
    "command": "workbench.action.navigateForward",
    "when": "!inputFocus"
  },
  // --

  // folding
  {
    "key": "ctrl+e",
    "command": "editor.toggleFold",
    "when": "editorTextFocus && vim.mode != 'Insert'"
  },
  // --

  // file management
  {
    "key": "r",
    "command": "renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "shift+n",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d d",
    "command": "deleteFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "y y",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  // --

  // jump to errors
  {
    "key": "m",
    "command": "editor.action.marker.nextInFiles",
    "when": "!inputFocus || (editorTextFocus && vim.mode != 'Insert')"
  },
  {
    "key": "shift-m",
    "command": "editor.action.marker.prevInFiles",
    "when": "!inputFocus || (editorTextFocus && vim.mode != 'Insert')"
  },

  // terminal
  {
    "key": "ctrl-s",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "!inputFocus || (editorTextFocus && vim.mode != 'Insert')"
  },
  {
    "key": "ctrl-s",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminalFocus"
  },
  // remove default c-s
  {
    "key": "ctrl+s",
    "command": "-extension.vim_ctrl+s",
    "when": "editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl"
  },
  // terminal

  // remove cmd-o
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openFileFolder",
    "when": "isMacNative && openFolderWorkspaceSupport"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openFolderViaWorkspace",
    "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openFile",
    "when": "false"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openLocalFileFolder",
    "when": "remoteFileDialogVisible"
  }
  // remove cmd-o
]
